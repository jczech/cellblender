begin model
begin parameters
    km2  0.00
    pLbs  100
    km1  0.00
    mu_wall  1e-9    # Viscosity in compartment wall, kg/um.s    units=kg/um.s
    pLS  30
    KB  1.3806488e-19    # Boltzmann constant, cm^2.kg/K.s^2    units=cm^2.kg/K.s^2
    mu_PM  1e-9    # Viscosity in compartment PM, kg/um.s    units=kg/um.s
    Nav  6.022e8    # Avogadro number based on a volume size of 1 cubic um
    kmS  0.13
    kpS  0.0166057788110262*Nav
    vol_CP  1
    pLgs  3
    pSSs  200
    pSS  100
    dc  0.1
    dm  0.1
    Rc  0.0015    # Radius of a (cylindrical) molecule in 2D compartment, um    units=um
    gamma  0.5722    # Euler's constant
    mu_CP  1e-9    # Viscosity in compartment CP, kg/um.s    units=kg/um.s
    pLSs  100
    kmLs  0.12
    vol_EC  39
    T  298.15    # Temperature, K    units=K
    Rs  0.002564    # Radius of a (spherical) molecule in 3D compartment, um    units=um
    mu_EC  1e-9    # Viscosity in compartment EC, kg/um.s    units=kg/um.s
    rxn_layer_t  0.01
    vol_wall  0.88/rxn_layer_t    # Surface area
    pLg  1
    kmL  20
    pLb  30
    Scale_Totals  1    # 0.00358 gives at least one each,   0.5 gives 2 of some
    kp1  0.000166057788110262*Nav
    Lig_tot  6.0e3 * Scale_Totals    # Default: 6.0e3
    kpL  0.0166057788110262/rxn_layer_t
    kp2  1.66057788110262e-06/rxn_layer_t
    Syk_tot  4e2 * Scale_Totals    # Default: 4e2
    Rec_tot  4.0e2 * Scale_Totals    # Default: 4.0e2
    Lyn_tot  2.8e2 * Scale_Totals    # Default: 2.8e2
    kpLs  0.0166057788110262/rxn_layer_t
    vol_PM  0.01/rxn_layer_t    # Surface area
    h  rxn_layer_t    # Thickness of 2D compartment, um    units=um
    ITERATIONS  1000
    #TIME_STEP  1e-6 # this value is generated from cellblender and must not be set
    VACANCY_SEARCH_DISTANCE  10
    MCELL_DEFAULT_DIFFUSION_CONSTANT_2D  1.7e-7
    MCELL_DEFAULT_DIFFUSION_CONSTANT_3D  8.51e-7
    MCELL_DIFFUSION_CONSTANT_2D_Lyn  1.7e-7
    MCELL_DIFFUSION_CONSTANT_2D_Rec  1.7e-7
    MCELL_DIFFUSION_CONSTANT_3D_Lig  8.51e-7
    MCELL_DIFFUSION_CONSTANT_3D_Syk  8.51e-7
end parameters
begin molecule types
    Lig(l,l)
    Lyn(SH2,U)
    Syk(a~Y~pY,l~Y~pY,tSH2)
    Rec(a,b~Y~pY,g~Y~pY)
end molecule types
begin compartments
    EC 3 vol_EC
    PM 2 vol_PM EC
    CP 3 vol_CP PM
end compartments
begin seed species
     @EC::Lig(l,l)  Lig_tot
     @PM::Lyn(SH2,U)  Lyn_tot
     @CP::Syk(a~Y,l~Y,tSH2)  Syk_tot
     @PM::Rec(a,b~Y,g~Y)  Rec_tot
end seed species
begin observables
    Molecules LycFree_MDLString Lyn(SH2,U)                                              # Should be: "COUNT[Lyn(U,SH2), WORLD]"
    Molecules RecPbeta_MDLString Rec(b~pY!?)                                            # Should be: "COUNT[Rec(b~pY!?), WORLD]"
    Molecules RecMon_MDLString Lig(l!1,l).Rec(a!1)                                      # Should be: "COUNT[Rec(a!1).Lig(l!1,l), WORLD]"
    Molecules RecDim_MDLString Lig(l!1,l!2).Rec(a!1).Rec(a!2)                           # Should be: "COUNT[Rec(a!1).Lig(l!1,l!2).Rec(a!2), WORLD]"
    Molecules RecRecLigLyn_MDLString Rec(a!1,b).Lig(l!1,l!2).Rec(a!2,b!3).Lyn(SH2,U!3)  # Should be: "COUNT[Lig(l!1,l!2).Lyn(U!3,SH2).Rec(a!2,b!3).Rec(a!1,b), WORLD]"
    Molecules RecPgamma_MDLString Rec(g~pY), Rec(g~pY!+)                                # Should be: "COUNT[Rec(g~pY),WORLD] + COUNT[Rec(g~pY!+), WORLD]"
    Molecules RecSyk_MDLString Syk(tSH2!1).Rec(g~pY!1)                                  # Should be: "COUNT[Rec(g~pY!1).Syk(tSH2!1), WORLD]"
    Molecules RecSykPS_MDLString Syk(a~pY,tSH2!1).Rec(g~pY!1)                           # Should be: "COUNT[Rec(g~pY!1).Syk(tSH2!1,a~pY), WORLD]"
    Molecules Lig_MDLString Lig                                                         # Should be: "COUNT[Lig,WORLD]"
    Molecules Lyn_MDLString Lyn                                                         # Should be: "COUNT[Lyn,WORLD]"
end observables
begin reaction rules
    Rec(a) + Lig(l,l) <-> Lig(l!1,l).Rec(a!1) kp1,km1
    Rec(b~Y) + Lyn(SH2,U) <-> Lyn(SH2,U!1).Rec(b~Y!1) kpL,kmL
    Rec(a!1,b~Y).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) -> Rec(a!1,b~pY).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) pLb
    Rec(a!1,g~Y).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) -> Rec(a!1,g~pY).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) pLg
    Rec(b~pY) + Lyn(SH2,U) <-> Lyn(SH2!1,U).Rec(b~pY!1) kpLs,kmLs
    Rec(a!1,b~Y).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) -> Rec(a!1,b~pY).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) pLbs
    Rec(a!1,g~Y).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) -> Rec(a!1,g~pY).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) pLgs
    Rec(g~pY) + Syk(tSH2) <-> Syk(tSH2!1).Rec(g~pY!1) kpS,kmS
    Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3).Syk(l~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3).Syk(l~pY,tSH2!4) pLS
    Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U).Syk(l~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U).Syk(l~pY,tSH2!4) pLSs
    Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~Y,tSH2!3).Syk(a~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~Y,tSH2!3).Syk(a~pY,tSH2!4) pSS
    Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~pY,tSH2!3).Syk(a~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~pY,tSH2!3).Syk(a~pY,tSH2!4) pSSs
    Rec(b~pY) -> Rec(b~Y) dm
    Rec(g~pY) -> Rec(g~Y) dm
    Syk(l~pY,tSH2!+) -> Syk(l~Y,tSH2!+) dm
    Syk(a~pY,tSH2!+) -> Syk(a~Y,tSH2!+) dm
    Syk(l~pY,tSH2) -> Syk(l~Y,tSH2) dc
    Syk(a~pY,tSH2) -> Syk(a~Y,tSH2) dc
end reaction rules
end model
